@{ Layout = null;}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link href="~/Content/Common.css" rel="stylesheet" />
    <link href="~/Content/Homepage.css" rel="stylesheet" />
    @Scripts.Render("~/bundles/jquery")
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    @Scripts.Render("~/bundles/bootstrap")
</head>

<body style="background-color:whitesmoke;">
    @model SocialNetwork.WEB.Models.ProfileViewModels.ProfileViewModel
    <div class="navbar navbar-inverse navbar-fixed-top " style="background-color:dimgray;">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("SocialNetwork", "Homepage", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">

                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <br>

    <div class="container">
        <div class="row">
            <div class="col-md-2 col-md-offset-1">
                <a href="#" class="nav-bar-link"><span class="glyphicon glyphicon-home"></span>  My profile</a><br>
                <a href="#" class="nav-bar-link"><span class="glyphicon glyphicon-search"></span>  Find</a><br>
                <a href="#" class="nav-bar-link"><span class="glyphicon glyphicon-tasks"></span>  News</a><br>
                <a href="#" class="nav-bar-link"><span class="glyphicon glyphicon-cog"></span>  Settings</a><br>
            </div>

            <div class="col-md-9" id="partialsPlace">
                <!--here is partial rendering-->

                @if (Model == null)
                {
                    <div>Cannot show the information</div>
                }
                else
                {
                    <div class="common-info-block common-info-block-text">
                        <div class="row">
                            <div class="col-md-3 col-md-offset-3">Name: </div>
                            <div class="col-md-6">@Model.Name</div>

                            <div class="col-md-3 col-md-offset-3">Sername: </div>
                            <div class="col-md-6">@Model.Sername</div>

                            <div class="col-md-3 col-md-offset-3">Identity name: </div>
                            <div class="col-md-6">@Model.IdentityName</div>

                            <div class="col-md-3 col-md-offset-3">Profile id: </div>
                            <div class="col-md-6">@Model.Id</div>

                            <div class="col-md-3 col-md-offset-3">Date of birth: </div>
                            <div class="col-md-6">@Model.DateOfBirth.Day / @Model.DateOfBirth.Month / @Model.DateOfBirth.Year</div>

                            <div class="col-md-3 col-md-offset-3">Status: </div>
                            <div class="col-md-6">@Model.CustomInfo</div>
                        </div>
                        <hr />
                        <div class="row">
                            <div class="col-md-3 col-md-offset-3"><span class="glyphicon glyphicon-user"></span> Followers <br>@Model.Followers.Count()</div>
                            <div class="col-md-3"><span class="glyphicon glyphicon-user"></span> Subscriptions<br>@Model.Subscriptions.Count()</div>
                        </div>
                    </div>

                    <div class="postTypeContainer" id="myPublications" onclick="changeTheDisplayedPosts()">My publications</div>
                        <div class="postTypeContainer" id="myReposts" style="display:none;" onclick="changeTheDisplayedPosts()">My reposts</div>

                        <div class="common-info-block common-info-block-text" id="write-post-container" onclick="createNewPost()">
                            Create a new post
                        </div>
                        <br />

                        <div class="common-info-block common-info-block-text" id="publicationingPost" style="display:none;">

                            @using (Ajax.BeginForm("PublicateNewPost", "Post", new AjaxOptions
                            {
                                HttpMethod = "Post",
                                OnComplete = "closePostForm"
                            }))
                            {
                            <div class="row">
                                <div class="col-md-offset-11 col-md-1">
                                    <a>
                                        <span class="glyphicon glyphicon-remove" onclick="closePostForm()"></span>
                                    </a>
                                </div>
                            </div>

                            <span>Hashtags</span> <a><span class="glyphicon glyphicon-plus" onclick="addHashtag()"></span></a>
                            <div class="hashtags-container" id="hashtagsContainer">
                                <div style="display:none;" class="error-message" id="incorrectHashtagsError">Hashtags may not be the same</div>
                            </div>

                            <hr />

                            <textarea id="newPostContent" rows="10" placeholder="Type here" name="Content"></textarea>
                            <hr />
                            <input type="submit" value="Publicate" />

                            }

                        </div>
                        <br>
                        <div id="publicationsContainer"></div>
                        <div id="repostsContainer" style="display:none;"></div>


                        <br>

                }
            </div>



            <script>
                function changeTheDisplayedPosts() {
                    var myPublications = $('#myPublications');
                    var myReposts = $('#myReposts');

                    var writePostContainer = $('#write-post-container');
                    var publicationingPost = $('#publicationingPost');
                    var publicationsContainer = $('#publicationsContainer');
                    var repostsContainer = $('#repostsContainer');

                    if (myReposts.css("display") == "none") {
                        myPublications.hide();
                        writePostContainer.hide();
                        publicationsContainer.hide();
                        publicationingPost.hide();

                        myReposts.show();
                        repostsContainer.show();
                    }
                    else {
                        myPublications.show();
                        writePostContainer.show();
                        publicationsContainer.show();

                        repostsContainer.hide();
                        myReposts.hide();
                    }
                    

                }

                function removeNoPublicationsErrorMessage() {
                    $('#noPublicationsErrorMessage').remove();
                }
                //Homepage script
                var totalHashtagsCountInHashtagsContainer = 0;
                function closePostForm() {
                    $('#write-post-container').show();
                    $('#publicationingPost').hide();
                    $('#newPostContent').val("");
                    $('#incorrectHashtagsError').hide();
                    $('#hashtagsContainer').empty();
                }
                function createNewPost() {
                    $('#write-post-container').hide();
                    $('#publicationingPost').show();
                    $('#newPostContent').val("");
                    $('#hashtagsContainer').empty();
                }

                function refreshPublications() { // after refreshing new post will be added

                }
                function addHashtag() {
                    var hashtagsContainer = $('#hashtagsContainer');
                    var newId = 'hashtagSet' + totalHashtagsCountInHashtagsContainer;
                    var newDeleteElementId = 'removeSpan' + totalHashtagsCountInHashtagsContainer;
                    totalHashtagsCountInHashtagsContainer++;

                    hashtagsContainer.append('<div id=' + newId + '><input type="text" name="Hashtags"><a  id=' + newDeleteElementId + '><span class="glyphicon glyphicon-remove"></span></a></div>');

                    $('#' + newDeleteElementId).click(function () {
                        var removingDivId = $('#' + newDeleteElementId).parent().attr('id');
                        $('#' + removingDivId).remove();

                    });

                }

                function checkPostForm() {
                    $("name=Hashtags").each(function (index, value) {
                        value.each(function (index, nestedValue) {
                            if (value == nestedValue) {
                                $('#incorrectHashtagsError').show();
                                return false;
                            }

                        });
                    });
                    var postContent = $('#newPostContent').val();
                    if (postContent == "" || postContent == null || postContent.split(" ") == "") { return false; }
                    $('#incorrectHashtagsError').hide();
                    closePostForm();

                    return true;
                }

                function setLike(postId, publishedPostLikeId) {
                    var identityName = '@Context.User.Identity.Name';
                    $.ajax({
                        type: 'POST',
                        url: '/Post/Like',
                        data: { "postId": postId,"identityName":identityName},
                        success: function (jsonResult) {
                            var result = JSON.parse(jsonResult);
                            $('#' + publishedPostLikeId).html(result["newLikesCount"]);

                        }
                    });
                    //alert("Liked");
                }
                function testOutput() { alert("from test output");}
            </script>
            <script>
                $(document).ready(function () {// for HomepagePartial
                    //var publishedPostOnWallCount = $('#publicationsContainer').children().length();
                    var publishedPostsLikes = 0;
                    var publishedPostsLikesId;
                    var identityName = '@Context.User.Identity.Name';
                    var publicationsContainer = $('#publicationsContainer');

                    $.ajax({
                        type: 'POST',
                        url: '/Post/Publications',
                        data: { "offset": 0, "identityName": identityName, "count": 10,"postType":"publications" },

                        success: function (jsonResult) {
                            var publicationsContainer = $('#publicationsContainer');
                            var result = JSON.parse(jsonResult);

                            if (result["errorMessage"]) {
                                $('#publicationsContainer').empty();
                                $('#publicationsContainer').append('<div id="noPublicationsErrorMessage" style="text-align:center;"class="common-info-block-text">' + result["errorMessage"] + '</div>');
                                return;
                            }
                            else {
                                //alert(jsonResult);
                                post = "";
                                for (var i = 0; i < result.length; i++) {
                                    publishedPostsLikesId = publishedPostsLikes + "LikeContainer";
                                    post += '<div class="post-container common-info-block-text">';
                                    // post += '<div>' + result[i]["PublisherName"] + " " + result[i]["PublisherSername"] + " (" + result[i]["PublisherIdentityName"] + ')</div>';
                                    post += '<div>' + result[i]["PublishDate"].replace("T", " at ") + '</div>';
                                    post += '<div class="hashtags-container">';

                                    for (var j = 0; j < result[i]["Hashtags"].length; j++) {
                                        post += ' <div class="hashtag">' + result[i]["Hashtags"][j] + '</div>';
                                    }
                                    post += '</div><hr/>';
                                    post += '<div>' + result[i]["Content"] + '</div><hr/>';//onclick="Like(' + result[i]["Id"] + ',' + publishedPostsLikesId + ')"
                                    post += '<div><a onclick="setLike('+result[i]["Id"]+','+"'"+publishedPostsLikesId+"'"+')"><span class="glyphicon glyphicon-heart"></span></a> Likes <span id=' + publishedPostsLikesId + '>' + result[i]["Likes"] + '</span>';
                                    post += '&nbsp&nbspReposts ' + result[i]["Reposts"] + '</div>';
                                    post += '</div><br>';

                                    publishedPostsLikes++;
                                    publicationsContainer.append(post);
                                    post = "";
                                }
                            }


                        }
                    });
                });

            </script>
        </div>
    </div>
    <div class="container">
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - SocialNetwork</p>
        </footer>
    </div>

</body>
</html>